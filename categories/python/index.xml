<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on (Dev)Ops observations</title><link>https://ylitalot.com/categories/python/</link><description>Recent content in python on (Dev)Ops observations</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Juha Ylitalo &amp;lt;juha@ylitalot.net&amp;gt;</copyright><lastBuildDate>Wed, 06 Dec 2017 12:00:00 +0200</lastBuildDate><atom:link href="https://ylitalot.com/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Notes about Ansible</title><link>https://ylitalot.com/posts/ansible-notes/</link><pubDate>Wed, 06 Dec 2017 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/ansible-notes/</guid><description>&lt;p>My favorite Ansible tools and personal contributions towards Ansible.&lt;/p></description></item><item><title>Doctest in Python</title><link>https://ylitalot.com/posts/python-doctest/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/python-doctest/</guid><description>My Assets on Octopress script needed couple modifications and I felt that it was good platform for doing unit tests. Python has nice test framework called doctest, which allows you to insert unit test cases as comments in your python code. My current tests are done for methods that don&amp;rsquo;t recover mockups (for things like file system access) and simply return strings, lists and such to caller.
In following example, I have method called _extract_from_markdown, which gets one line of text from markdown file as string.</description></item></channel></rss>