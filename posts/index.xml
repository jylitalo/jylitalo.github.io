<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on (Dev)Ops observations</title><link>https://ylitalot.com/posts/</link><description>Recent content in Posts on (Dev)Ops observations</description><generator>Hugo</generator><language>en</language><copyright>Juha Ylitalo &amp;lt;juha@ylitalot.net&amp;gt;</copyright><lastBuildDate>Sat, 10 Aug 2024 12:00:00 +0200</lastBuildDate><atom:link href="https://ylitalot.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Using AWS Control Tower with terraform</title><link>https://ylitalot.com/posts/ct-terraform/</link><pubDate>Sat, 10 Aug 2024 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/ct-terraform/</guid><description>Disclaimer: This post is based on one customer project with pre-existing AWS Control Tower.
AWS created Control Tower as a way to allow organization to manage their AWS Organization, accounts and their setup. Control Tower has nice UI in AWS console, but if you try to terraform anything you will quickly get confused, because terraform (with AWS provider 5.62.0) has ONLY TWO aws_control_tower_* resources. Situation with awscli (version 2.17.5) isn&amp;rsquo;t much better.</description></item><item><title>Linters</title><link>https://ylitalot.com/posts/linters/</link><pubDate>Sun, 11 Dec 2022 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/linters/</guid><description>&lt;p>Linter is any tool that detects and flags errors in programming languages, including stylistic errors. - &lt;a href="https://en.wikipedia.org/wiki/Lint_(software)">Wikipedia&lt;/a>&lt;/p></description></item><item><title>Github Pages</title><link>https://ylitalot.com/posts/github-pages/</link><pubDate>Sat, 05 Jan 2019 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/github-pages/</guid><description>Current solution is based on Hugo and its instructions for Hosting on Github with GitHub Actions.</description></item><item><title>Notes about Ansible</title><link>https://ylitalot.com/posts/ansible-notes/</link><pubDate>Wed, 06 Dec 2017 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/ansible-notes/</guid><description>&lt;p>My favorite Ansible tools and personal contributions towards Ansible.&lt;/p></description></item><item><title>Notes about SSH</title><link>https://ylitalot.com/posts/ssh-notes/</link><pubDate>Tue, 05 Dec 2017 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/ssh-notes/</guid><description>&lt;p>Random notes about ssh config and related topics.&lt;/p></description></item><item><title>Chef without Chef server</title><link>https://ylitalot.com/posts/chef-without-server/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/chef-without-server/</guid><description>&lt;p>There are couple alternatives available if you wish to use Chef in your infrastructure, but don&amp;rsquo;t have budget to setup hosted Chef service. So far I&amp;rsquo;ve seen one based on Git and another based on AWS S3.&lt;/p></description></item><item><title>Doctest in Python</title><link>https://ylitalot.com/posts/python-doctest/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/python-doctest/</guid><description>My Assets on Octopress script needed couple modifications and I felt that it was good platform for doing unit tests. Python has nice test framework called doctest, which allows you to insert unit test cases as comments in your python code. My current tests are done for methods that don&amp;rsquo;t recover mockups (for things like file system access) and simply return strings, lists and such to caller.
In following example, I have method called _extract_from_markdown, which gets one line of text from markdown file as string.</description></item><item><title>Notes about Chef</title><link>https://ylitalot.com/posts/chef-notes/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/chef-notes/</guid><description>&lt;p>Random notes about chef configuration management tool and related topics.&lt;/p></description></item><item><title>Notes about IPTables</title><link>https://ylitalot.com/posts/iptables-notes/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/iptables-notes/</guid><description>&lt;p>Random notes about iptables, ufw and such tools in Linux.&lt;/p></description></item><item><title>Notes about Puppet</title><link>https://ylitalot.com/posts/puppet-notes/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/puppet-notes/</guid><description>Random notes about puppet configuration management tool and related topics.
Puppet doesn&amp;rsquo;t like symlinks Link to heading When you start building /etc/puppet/environments/production in your puppet master, don&amp;rsquo;t use symlinks on directory tree. I once made the mistake of using symlinks for manifests and modules directories and was getting frustrated, when puppet agent didn&amp;rsquo;t seem to get my manifests/site.pp file.
Once I copied all the directly into /etc/puppet/environments/production tree, things started to work.</description></item><item><title>VirtualBox notes</title><link>https://ylitalot.com/posts/virtualboxes-notes/</link><pubDate>Mon, 14 Sep 2015 12:00:00 +0200</pubDate><guid>https://ylitalot.com/posts/virtualboxes-notes/</guid><description>&lt;p>Random notes about VirtualBox and related topics.&lt;/p></description></item></channel></rss>